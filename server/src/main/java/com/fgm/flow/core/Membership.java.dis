package com.fgm.flow.core;

import java.io.Serializable;
import java.util.Date;
import java.util.List;
import java.util.ArrayList;
import javax.persistence.Entity;
import javax.persistence.Table;
import javax.persistence.Id;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Column;
import javax.persistence.UniqueConstraint;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.OneToMany;
import javax.persistence.FetchType;
import javax.persistence.CascadeType;
import javax.persistence.EmbeddedId;
import javax.validation.constraints.Size;
import lombok.Getter;
import lombok.Setter;
import lombok.NoArgsConstructor;
import lombok.EqualsAndHashCode;
import com.google.gson.annotations.Expose;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;

/**
 * A Flow user
 *
 * @author fgm
 */
@NoArgsConstructor
@EqualsAndHashCode(of = {"id"})
@Entity
@Table(
        name="membership"
)
public class Membership implements Serializable
{
    @EmbeddedId
    @Getter
    @Setter
    private MembershipId id;    
    
    @Getter
    @Setter
    @Column(nullable=false)
    private int status;
    
    @Getter
    @Setter
    @Column(nullable=false)
    @Temporal(TemporalType.TIMESTAMP)
    private Date time;
    
    public Membership(User user, UserGroup userGroup, int status)
    {
        this.id = new MembershipId(user, userGroup);
        this.status = status;
        this.time = new Date();
    }
}